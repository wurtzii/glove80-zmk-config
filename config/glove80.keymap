/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 0>, <&to 0>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };

        tty_macro: tty_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>;
            label = "TTY_MACRO";
        };
    };

    combos {
        compatible = "zmk,combos";

        toGamingLayer {
            bindings = <&tog 1>;
            key-positions = <64 79>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&trans    &trans  &trans         &trans      &trans                                                                                                  &trans         &trans     &trans   &trans    &trans
&trans    &trans  &trans         &trans      &trans        &trans                                                                            &trans  &trans         &trans     &trans   &trans    &trans
&kp TAB   &kp Q   &kp W          &kp F       &kp P         &kp B                                                                             &kp J   &kp L          &kp U      &kp Y    &kp SEMI  &trans
&kp ESC   &kp A   &kp R          &kp S       &kp T         &kp G                                                                             &kp M   &kp N          &kp E      &kp I    &kp O     &trans
&kp LALT  &kp X   &kp C          &kp D       &kp V         &kp Z   &kp LEFT_CONTROL  &trans     &mo 5     &trans  &trans     &kp LEFT_SHIFT  &kp K   &kp H          &kp COMMA  &kp DOT  &kp FSLH  &trans
&trans    &trans  &kp BACKSPACE  &kp DELETE  &kp LEFT_GUI          &mo 2             &kp SPACE  &trans    &trans  &kp ENTER  &mo 3                   &kp RIGHT_GUI  &mo 4      &trans   &trans    &trans
            >;
        };

        gaming_layer {
            bindings = <
&none      &none   &none   &none   &none                                                                      &none     &none         &none      &none  &none
&none      &kp N5  &kp N6  &kp N7  &kp N8  &kp N9                                                      &none  &none     &none         &none      &none  &none
&kp TAB    &kp Q   &kp N   &kp E   &kp R   &kp T                                                       &none  &none     &none         &none      &none  &none
&kp LSHFT  &kp C   &kp A   &kp W   &kp D   &kp F                                                       &none  &kp LEFT  &kp UP_ARROW  &kp RIGHT  &none  &none
&kp ESC    &kp Z   &kp X   &kp S   &kp V   &kp B   &kp LCTRL  &none      &none    &none  &none  &none  &none  &none     &kp DOWN      &none      &none  &none
&none      &kp N1  &kp N2  &kp N3  &kp N4          &mo 3      &kp SPACE  &none    &none  &none  &none         &none     &none         &none      &none  &none
            >;
        };

        number_pad {
            bindings = <
&trans  &trans        &trans     &trans     &trans                                                                        &trans    &trans  &trans         &trans  &trans
&trans  &trans        &trans     &trans     &trans    &trans                                                    &trans    &trans    &trans  &trans         &trans  &trans
&trans  &kp ASTERISK  &kp N7     &kp N8     &kp N9    &trans                                                    &trans    &trans    &trans  &trans         &trans  &trans
&trans  &kp N0        &kp N4     &kp N5     &kp N6    &trans                                                    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT      &trans  &trans
&trans  &kp SLASH     &kp N1     &kp N2     &kp N3    &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans    &trans    &trans  &trans         &trans  &trans
&trans  &trans        &kp EQUAL  &kp MINUS  &kp PLUS          &trans  &trans  &trans    &trans  &trans  &trans            &trans    &trans  &kp BACKSPACE  &trans  &trans
            >;
        };

        symbol_layer {
            bindings = <
&trans  &trans             &trans           &trans                &trans                                                                          &trans        &trans        &trans          &trans            &trans
&trans  &trans             &trans           &trans                &trans     &trans                                                       &trans  &trans        &trans        &trans          &trans            &trans
&trans  &trans             &kp AMPERSAND    &kp NON_US_BACKSLASH  &kp SQT    &kp GRAVE                                                    &trans  &kp LBKT      &kp RBKT      &trans          &trans            &trans
&trans  &kp DOUBLE_QUOTES  &kp DOLLAR       &kp PERCENT           &kp CARET  &kp PIPE                                                     &trans  &kp LS(LBRC)  &kp LS(RBRC)  &kp UNDERSCORE  &trans            &trans
&trans  &trans             &kp EXCLAMATION  &kp AT_SIGN           &kp HASH   &kp TILDE  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &kp LS(LPAR)  &kp LS(RPAR)  &kp LESS_THAN   &kp GREATER_THAN  &trans
&trans  &trans             &trans           &trans                &trans                &trans  &trans  &trans    &trans  &trans  &trans          &trans        &trans        &trans          &trans            &trans
            >;
        };

        tty_layer {
            bindings = <
&trans  &trans           &trans          &trans          &trans                                                                            &trans  &trans  &trans  &trans  &trans
&trans  &trans           &trans          &trans          &trans          &trans                                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LA(LC(F12))  &kp LA(LC(F7))  &kp LA(LC(F8))  &kp LA(LC(F9))  &trans                                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LA(LC(F11))  &kp LA(LC(F4))  &kp LA(LC(F5))  &kp LA(LC(F6))  &trans                                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LA(LC(F10))  &kp LA(LC(F1))  &kp LA(LC(F2))  &kp LA(LC(F3))  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans           &trans          &trans          &trans                  &trans  &trans  &trans    &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        keeb_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                              &trans        &trans        &trans        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                              &trans  &trans        &trans        &trans        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                              &trans  &trans        &trans        &trans        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                              &trans  &bt BT_SEL 3  &bt BT_SEL 4  &trans        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &bootloader  &trans    &trans  &bootloader  &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &bt BT_CLR   &trans    &trans  &bt BT_CLR   &trans          &trans        &trans        &trans        &trans  &trans
            >;
        };
    };
};
